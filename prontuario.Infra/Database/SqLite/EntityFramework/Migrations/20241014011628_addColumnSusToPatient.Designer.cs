// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using prontuario.Infra.Database;

#nullable disable

namespace prontuario.Infra.Database.SqLite.EntityFramework.Migrations
{
    [DbContext(typeof(ProntuarioDbContext))]
    [Migration("20241014011628_addColumnSusToPatient")]
    partial class addColumnSusToPatient
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("prontuario.Infra.Database.SqLite.EntityFramework.Models.AddressModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<long>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<long>("PatientId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PatientId")
                        .IsUnique();

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("prontuario.Infra.Database.SqLite.EntityFramework.Models.EmergencyContactDetailsModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<long>("PatientId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<string>("Relationship")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PatientId")
                        .IsUnique();

                    b.ToTable("EmergencyContactDetails");
                });

            modelBuilder.Entity("prontuario.Infra.Database.SqLite.EntityFramework.Models.PatientModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("Date");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<string>("Rg")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<string>("Sus")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("prontuario.Infra.Database.SqLite.EntityFramework.Models.ServiceModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateService")
                        .HasColumnType("Date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<long>("PatientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("prontuario.Infra.Database.SqLite.EntityFramework.Models.AddressModel", b =>
                {
                    b.HasOne("prontuario.Infra.Database.SqLite.EntityFramework.Models.PatientModel", "PatientModel")
                        .WithOne("AddressModel")
                        .HasForeignKey("prontuario.Infra.Database.SqLite.EntityFramework.Models.AddressModel", "PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PatientModel");
                });

            modelBuilder.Entity("prontuario.Infra.Database.SqLite.EntityFramework.Models.EmergencyContactDetailsModel", b =>
                {
                    b.HasOne("prontuario.Infra.Database.SqLite.EntityFramework.Models.PatientModel", "PatientModel")
                        .WithOne("EmergencyContactDetailsModel")
                        .HasForeignKey("prontuario.Infra.Database.SqLite.EntityFramework.Models.EmergencyContactDetailsModel", "PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PatientModel");
                });

            modelBuilder.Entity("prontuario.Infra.Database.SqLite.EntityFramework.Models.ServiceModel", b =>
                {
                    b.HasOne("prontuario.Infra.Database.SqLite.EntityFramework.Models.PatientModel", "PatientModel")
                        .WithMany("ServicesModel")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PatientModel");
                });

            modelBuilder.Entity("prontuario.Infra.Database.SqLite.EntityFramework.Models.PatientModel", b =>
                {
                    b.Navigation("AddressModel")
                        .IsRequired();

                    b.Navigation("EmergencyContactDetailsModel")
                        .IsRequired();

                    b.Navigation("ServicesModel");
                });
#pragma warning restore 612, 618
        }
    }
}
